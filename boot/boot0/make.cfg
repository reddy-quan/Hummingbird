#/*
#*********************************************************************************************************
#*                                                    MELIS
#*                                    the Easy Portable/Player Develop Kits
#*                                               makefile Module
#*
#*                                    (c) Copyright 2006-2010, kevin.z China
#*                                             All Rights Reserved
#*
#* File    : make.cfg
#* By      : kevin.z
#* Version : v1.0
#* Date    : 2010-9-3 9:39
#* Descript:
#* Update  : date                auther      ver     notes
#*********************************************************************************************************
#*/


ROOT    = .
SDKROOT = $(ROOT)/..


#导入交叉编译器通用配置
include $(SDKROOT)/config/ARMCC_CROSSTOOL.CFG


#头文件路径列表
INCLUDES        =   -I$(ROOT)                               \
                    -I$(SDKROOT)/config                     \
                    -I$(SDKROOT)/boot1/include              \
                    -I$(SDKROOT)/boot1/include/interinc     \
                    -I$(SDKROOT)/boot1/include/block_device


LINK_SCT        = --scatter=$(ROOT)/config/config.sct

#库文件列表
ifeq ($(STORAGE_MEDIA_TYPE), STORAGE_NAND)
#LIBS            = $(ROOT)/storage_libs/nand_boot0.a
#LIBS           = $(SDKROOT)/boot1/driver/hardware_libs/bsp_nfc_boot0.lib
STORAGE_TYPE    = -I$(SDKROOT)/config/storage_media_cfg/nand
SRCDIRS         = $(shell find $(ROOT)/load_Boot1_from_nand -maxdepth 3 -type d)
TARGET      	= $(WORKSPACEPATH)/eGon/boot0_nand.bin
TARGET1         = $(LICHEEPATH)/eGon/boot0_nand.bin
TARGET2         = $(SDKROOT)/pack/chips/sun7i/eGon/boot0_nand.bin
LOCALTARGET 	= __boot0_nand.axf
else

ifeq ($(STORAGE_MEDIA_TYPE), STORAGE_SDMMC)
#LIBS            = $(ROOT)/storage_libs/sdmmc_boot0.a
LIBS            =
STORAGE_TYPE    = -I$(SDKROOT)/config/storage_media_cfg/sdcard
SRCDIRS         = $(shell find $(ROOT)/load_Boot1_from_sdmmc -maxdepth 3 -type d)
TARGET      	= $(WORKSPACEPATH)/eGon/boot0_sdcard.bin
TARGET1         = $(LICHEEPATH)/eGon/boot0_sdcard.bin
TARGET2         = $(SDKROOT)/pack/chips/sun7i/eGon/boot0_sdcard.bin
LOCALTARGET 	= __boot0_sdmmc.axf
else

ifeq ($(STORAGE_MEDIA_TYPE), STORAGE_SPINOR)
LIBS            = $(ROOT)/storage_libs/spinor_boot0.a
STORAGE_TYPE    = -I$(SDKROOT)/config/storage_media_cfg/spinor
SRCDIRS         = $(shell find $(ROOT)/load_Boot1_from_spinor -maxdepth 3 -type d)
TARGET      	= $(WORKSPACEPATH)/eGon/boot0_spinor.bin
TARGET1         = $(LICHEEPATH)/eGon/boot0_spinor.bin
LOCALTARGET 	= __boot0_spinor.axf
else
error:
	$(error STORAGE_MEDIA_TYPE is invalid now!!!)
endif

endif

endif



#定义生成的目标文件(输出/本地)
TMPTARGET   = $(ROOT)/boot0_origin.bin

#列出该工程下的所有包含源程序的子目录
SRCDIRS     :=  $(SRCDIRS)                                  \
            $(ROOT)                                         \
            $(shell find $(ROOT)/drv -maxdepth 3 -type d)   \
            $(shell find $(ROOT)/lib -maxdepth 3 -type d)   \
            $(shell find $(ROOT)/sys_op -maxdepth 3 -type d)

INCLUDES    :=  $(INCLUDES)                         \
				$(STORAGE_TYPE)						\
                $(foreach dir,$(SRCDIRS),-I$(dir))


ifeq ($(CROSSTOOL), ARMRVDS)

#===============================================================================
#使用RVDS编译器
#===============================================================================
#程序链接脚本
LINK_SCT   := $(LINK_SCT)
#编译器扩展参数
CFLAGS     := $(CFLAGS) -O1 --debug
CFLAGS     := $(CFLAGS) $(INCLUDES)
#汇编器扩展参数
ASFLAGS    := $(ASFLAGS) --debug --keep
ASFLAGS    := $(ASFLAGS) $(INCLUDES)
#链接器扩展参数
LKFLAGS    := $(LKFLAGS) $(LINK_SCT)
#加载器扩展参数
LDFLAGS    := $(LDFLAGS) --bin --output

else

#===============================================================================
#使用GNU-GCC编译器
#===============================================================================
error:
	$(error GNU Cross-tool is invalid now!!!)

endif

